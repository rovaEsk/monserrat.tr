<?phpheader('Content-Type: text/html; charset=utf-8');session_start();/*if ( 'POST' == $_SERVER['REQUEST_METHOD'] ) {	if ( isset( $_SERVER['HTTP_ORIGIN'] ) ) {		$address = 'http://' . $_SERVER['SERVER_NAME'];		if ( strpos( $address, $_SERVER['HTTP_ORIGIN'] ) !== 0 ) {			exit( 'CSRF protection in POST request: detected invalid Origin header: ' . $_SERVER['HTTP_ORIGIN'] );		}	}}*/$session = md5( session_id()+time() );require_once ('../../global.php');//require_once( '../includes/connexion.php' );require_once( '../includes/functions.php' );$articlemoduleid = 3;if ( isset( $_SESSION['prodID'] ) ) $productID = $_SESSION['prodID']; else die();if ( isset( $_POST['text'] ) AND $_POST['text'] != '' AND isset( $_POST['action'] ) AND $_POST['action'] == 'update' ) {	$text = rawurldecode( $_POST['text'] ); // texte	$color = $_POST['couleur']; //couleur du texte	// Prix à la longueur en cm 	$request = "	SELECT pm.prixmodule AS prixmodule					FROM prixarticlemodule AS pm					INNER JOIN articlemodule_prix AS amp	    				ON pm.prixmoduleid = amp.prixmoduleid					WHERE amp.articlemoduleid = ".$articlemoduleid."					LIMIT 1" ;	$moduleFeature = $DB_site->query_first($request);		$tarif+=$moduleFeature[prixmodule];	//$unitPrice = 0.1416;	$unitPrice = $moduleFeature[prixmodule] * 0.01;		$length = strlen( $text );	$qty = intval( $_POST['nb'] );	$font = $_POST['font'];	$height = floatval( $_POST['height'] ); //dimensions en mm	$width = floatval( $_POST['width'] ); // dimensions en mm	$currentInput = $_POST['currentInput'];	$font = $_POST['font'];	$textFont = $_SERVER['DOCUMENT_ROOT'] . 'fonts/' . $font;	if ( !file_exists( $textFont ) )		die();	// Image retournée	$background = new ImagickPixel( 'transparent' );	$im = new Imagick();	$draw = new ImagickDraw();	$draw->setFont( $textFont );	$draw->setFontSize( 200 );	$draw->setFillColor( $color );	$draw->setStrokeAntialias( true );	$draw->setTextAntialias( true );	$fm = $im->queryFontMetrics( $draw, $text );	$draw->annotation( $fm['boundingBox']['y2'], $fm['ascender'], $text );	$im->newImage( $fm['textWidth'] + $fm['boundingBox']['y2'] + $fm['boundingBox']['x2'], $fm['textHeight'], $background );	$im->setImageFormat( 'png' );	$im->drawImage( $draw );	$im->trimImage( 0 );	$d = $im->getImageGeometry();	$w = $d['width'];	$h = $d['height'];	$ratio = $h / $w;	/*	if ( $height != 0 ) {		$newWidth = $height / $ratio;		$data = array(			'image' 	=> base64_encode( $im ),			'text'		=> $text,			'height'	=> $height,			'width'		=> round( $newWidth, 2 ),			'ratio'		=> floatval( $ratio ),			'expDate'	=> date( 'd/m/Y', strtotime( "+2 days" ) ),			'nombreLettres' => $length,			'prix'		=> round( $newWidth * $unitPrice * $qty, 2 ),			'prix_unitaire' => round( $newWidth * $unitPrice, 2 ),			'currentInput' => $currentInput		);	} elseif ( $width != 0 ) {		$newHeight = $width * $ratio;		$data = array(			'image' 		=> base64_encode( $im ),			'text'			=> $text,			'height'		=> round( $newHeight, 2 ),			'width'			=> $width,			'ratio'			=> floatval( $ratio ),			'expDate'		=> date( 'Yd/m/Y', strtotime( "+2 days" ) ),			'nombreLettres' => $length,			'prix'			=> round( $width * $unitPrice * $qty, 2 ),			'prix_unitaire' => round( $width * $unitPrice, 2 ),			'origin'		=> $_SERVER['HTTP_ORIGIN'],			'currentInput'	=> $currentInput		);	}	*/			$newWidth = 0;	$newHeight = 0;		switch ($currentInput) {	    case "dimension_height":	        if($height == 0){				$height = 2;	        }	        if($height > 93){				$height = 93;	        }	        $newHeight = $height;			$newWidth = $height / $ratio;	        break;	    case "dimension_width":	        if($width == 0){				$width = 5;	        }			$newHeight = $width * $ratio;			$newWidth = $width;	        if($newHeight > 93){		        $newHeight = 93;				$newWidth = 93 / $ratio;	        }	        break;	    case "texte_adhesif":	        if($height == 0){				$height = 2;	        }	        $newHeight = $height;			$newWidth = $height / $ratio;	        break;	    default:	        echo "outOfInput";	}		$data = array(		'image' 		=> base64_encode( $im ),		'text'			=> $text,		'height'		=> round( $newHeight, 2 ),		'width'			=> round( $newWidth, 2 ),		'ratio'			=> floatval( $ratio ),		'expDate'		=> date( 'Yd/m/Y', strtotime( "+2 days" ) ),		'nombreLettres' => $length,		'prix'			=> round( $newWidth * $unitPrice * $qty, 2 ),		'prix_unitaire' => round( $newWidth * $unitPrice, 2 ),		'origin'		=> $_SERVER['HTTP_ORIGIN'],		'currentInput'	=> $currentInput	);	$_SESSION['rapidpub'][$productID][$data];	echo json_encode( $data );	$im->clear();	$im->destroy();}?>